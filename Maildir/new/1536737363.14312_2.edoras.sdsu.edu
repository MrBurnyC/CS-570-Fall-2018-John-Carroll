Return-Path: <cssc0018@edoras.sdsu.edu>
X-Original-To: cssc0018
Delivered-To: cssc0018@edoras.sdsu.edu
Received: by edoras.sdsu.edu (Postfix, from userid 1129)
	id 196216000048; Wed, 12 Sep 2018 00:29:23 -0700 (PDT)
Date: Wed, 12 Sep 2018 00:29:23 -0700
To: cssc0018@edoras.sdsu.edu
Subject: CS570 Program 1 results
User-Agent: Heirloom mailx 12.5 7/5/10
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20180912072923.196216000048@edoras.sdsu.edu>
From: cssc0018@edoras.sdsu.edu (Bernardo Cervantes)

This is a **preliminary** test of your upcoming Program 1.
Due dates for our programs can be found in the ~cs570/calendar file on edoras.

This message, which will appear to be mailed from your account, is intended to
show you some (but not necessarily all) of the checks that will be made on your
assignment when the due date actually arrives.  This is NOT the actual version
that will be graded, but only an attempt to give you early warning of any
potential problems.  Point totals in the final graded version may differ.

[Standard Disclaimer:]
These practice tests are intended to show bugs, but also to reveal places
where you may not be following all the automatic grader's nitpicking
requirements.  If you receive failure warnings on the preliminary tests
and then also have difficulty during the graded event, you have very little
recourse.  To take full advantage of the feedback provided in this course,
you must do the assignments in a timely fashion.
jc

Login     Name                 Tty      Idle  Login Time   Office     Office Phone   Host
cssc0018  Bernardo Cervantes   pts/9       *  Sep  8 15:58 6196001753                (169.228.205.149)

Checking Program 1:
total 48
-rw------- 1 cssc0018    74 Sep  6 12:37 2ndfile
-rw------- 1 cssc0018 12288 Sep  6 12:47 9-6-18
drwx------ 5 cssc0018    52 Aug 30 23:26 Maildir/
drwx------ 2 cssc0018   130 Sep 11 22:08 One/
-rw------- 1 cssc0018  1733 Aug 31 18:01 README
drwx------ 2 cssc0018    46 Sep 11 16:33 Sandbox/
drwxr-xr-x 2 cssc0018  4096 Sep  5 20:02 Zero/
lrwxrwxrwx 1 cssc0018    31 Aug 30 10:16 calendar -> /home/cs/faculty/cs570/calendar
-rwxr-xr-x 1 cssc0018  9648 Aug 31 08:26 errors*
lrwxrwxrwx 1 cssc0018    31 Aug 31 08:05 errors.c -> /home/cs/faculty/cs570/errors.c
-rw------- 1 cssc0018     3 Sep  6 13:00 hifile
-rw------- 1 cssc0018    83 Sep  6 12:32 newfile
-rw------- 1 cssc0018    95 Sep  6 12:39 nf
-rw------- 1 cssc0018     0 Sep  6 12:40 sorted
Test 0... checking for the proper directory:
total 36
lrwxrwxrwx 1 cssc0018    29 Sep 10 22:11 Data1 -> /home/cs/faculty/cs570/Data1//
-rw-r--r-- 1 cssc0018  4198 Sep 11 22:08 getword.c
lrwxrwxrwx 1 cssc0018    36 Sep  4 08:51 getword.h -> /home/cs/faculty/cs570/One/getword.h
-rw------- 1 cssc0018  6832 Sep 11 22:08 getword.o
-rw------- 1 cssc0018   434 Sep  4 08:24 gradernotes
lrwxrwxrwx 1 cssc0018    35 Sep  4 08:52 makefile -> /home/cs/faculty/cs570/One/makefile
-rwx------ 1 cssc0018 11648 Sep 11 22:08 p1*
lrwxrwxrwx 1 cssc0018    31 Sep  4 08:51 p1.c -> /home/cs/faculty/cs570/One/p1.c
-rw------- 1 cssc0018  3416 Sep 10 17:42 p1.o
Test 1... testing will proceed only if you have created the proper file:
ls -lo ~/One/getword.c
-rw-r--r-- 1 cssc0018 4198 Sep 11 22:08 /home/cs/carroll/cssc0018/One/getword.c

1    /*getword.c  - is a lexical analyzer that meets the requirements
2     *	       of Program 0.
3     *
4     * Class Info- Bernardo Cervantes , John Carroll, CS570 ,
5     *	       Due: 9/17/18 @ 8PM
6     *		 
7     * Synopsis  - Takes input from the keyboard (stdin) or from
8     * 	       Data0/input# and writes to the Storage array 
9     *	       and returns a int back to p0.
10    *
11    * Objective - Returns the correct input back to p0 so that 
12    *             p0 will print out the correct int and string
13    *	       that is identical to the same output in the 
14    *	       p0 prompt and the what autograder produces.
15    *             
16    */
17   
18   /* Include Files */
19   #include <stdio.h>
20   #include <stdlib.h>
21   #include "getword.h"
22   
23   
24   int getword(char *w){
25   	int wordCount = 0; //Must initalize to zero or else you get garbage.
26   	int iochar = 0;
27   	int size = 0;      //Size of string	
28   	int true = 0;      //bool for checking '$'
29   	const char *name = "HOME";
30    	char *value = getenv(name); //Sets home directory to value ; 
31   	
32   	char *x = value;	//Points to beginning string of value.
33    	
34   	/* Stores intital char */
35   
36   	iochar = getchar(); 
37   
38   	/* Skipping leading spaces. */
39   
40   	while(iochar == ' '){
41   		iochar = getchar();	
42   	}
43   
44   	/* Check if EOF signal is in the beginning
45   	 * and puts null char in array (storage) to print
46   	 * an empty string. 
47   	 * Returns -255
48   	 */
49   
50   	if(iochar == EOF){
51   		*w = '\0';    
52   		return -255;
53   	}
54   
55   	/* Checks if newline is in the beginning of the input.
56   	 * Puts null char in array to print empty string.
57   	 * Returns 0
58   	 */
59   
60   	if(iochar == '\n'){
61   		*w = '\0';
62   		return 0;
63   	}
64   
65   	/*
66   	 * Checks if ";" is first char  
67   	 * in input. Puts null char in array to print
68   	 * null empty string.
69   	 * Return 0 
70   	 */ 
71   
72   	if(iochar == ';'){
73   		*w = '\0';
74   		return 0;
75   	}
76   
77   
78   	/*
79   	 * Checks if "$" is first char  
80   	 * in input. Puts null char in array to print
81   	 * null empty string. Gets next char and checks 
82   	 * if it is EOF. Sets boolean true to 1 or true.
83   	 * Return 0 
84   	 */ 
85   
86   	if(iochar == '$'){
87   		true = 1;
88   		iochar = getchar();
89   		if(iochar == EOF){
90   			*w = '\0';
91   			return 0;
92   		}
93   	} 
94   
95   	if(iochar == '~'){
96   		iochar = getchar();
97   		
98   		if(iochar == EOF  || iochar == '\n'){
99   			*w++ = '~';
100  			*w = '\0';	
101  			ungetc(iochar , stdin);
102  			return -1;	
103  			//true = 1;		
104  		}
105  
106  		else{
107  
108  
109  			while(*x != '\0'){
110  				*w = *x;
111  				w++;
112  				x++;
113  				wordCount++;
114  			}
115  		}	
116  	}
117  	
118  
119  	/*
120  	 * Infinite for loop is used to get any remaining.  
121  	 * characters with exception chars accounted for such as
122  	 * EOF spaces, newlines and semicolons which are the same
123  	 * as the first checks but this time we return wordCount since
124  	 * these characters are not the first char in the words anymore.
125           * when the word is processed the storage array has been written
126  	 * with the word or an empty string based on some execptions
127  	 * and the wordcount is returned which stops the for loop.    
128  	 */ 
129  
130  	for(;;){
131  
132  		/*
133   		* Checks to see if wordCount is greater than Storage (255).
134  		 * If so then it terminates the string and returns its
135  		 * current word count.
136   		*/
137  
138  		if(wordCount == STORAGE-1){
139  			iochar = ungetc(iochar, stdin);
140  			*w = '\0';
141  			return wordCount; 
142  		}
143  
144  		/* Checks for EOF. If wordCount is anything but zero. It returns
145  		 * th word count. If not it returns -255. 
146  		 */
147  	
148  		if(iochar == EOF){
149  			if(wordCount < 0 || wordCount > 0){
150  				iochar = ungetc(iochar,stdin);
151  				*w = '\0';
152  				return wordCount;
153  			}
154  
155  			return -255; 
156  		}
157  
158  		/* Checks for space. If found, write null char to 
159  		 * array and 
160  		 * return wordCount.
161  		 */
162  
163  		if(iochar == ' '){
164  			*w = '\0';
165  			return wordCount;
166  		}
167  
168  
169  		/* Checks for newline or semicolon. 
170  		 * If found, write null char to 
171  		 * array and 
172  		 * return wordCount.
173  		 */
174  
175  		if(iochar == '\n'|| iochar == ';'){
176  			iochar = ungetc(iochar,stdin);
177  			*w = '\0';
178  			return wordCount;
179  		}
180  
181  
182  		/* Writes Current Iochar To Array.
183  		 * Increments pointer to next array index. 
184  		 */
185  
186  		*w = iochar;
187  		w++;
188  
189  		/* Check if $ was at the beginning of a word.
190  		 * If true then wordCount is decremented 
191  		 *  and is negative. If not then the wordCount 
192  		 *  is incremented and is postive. 
193  		 */
194  
195  		if(true == 1){
196  			wordCount--;
197  		}
198  
199  		else{
200  			wordCount++;
201  		}
202  		/*Gets next char and repeats loop. */
203  
204  		iochar = getchar();
205  
206  
207  	}
208  
209  }

Test 2... is getword.c documented?
(Your getword.c documentation does NOT have to repeat the specs in getword.h,
but it should contain your name, instructor name [NOTE: 'Carroll' contains two
'R's and two 'L's], class (that is, 'CS570'), due date, etc.)
One point was possible here; your total is now 1/1

Test 3... how is the syntax?
splint -warnposix +trytorecover -weak getword.c
Splint 3.1.2 --- 11 Oct 2015

getword.c: (in function getword)
getword.c:27:6: Variable size declared but not used
  A variable is declared but never used. Use /*@unused@*/ in front of
  declaration to suppress message. (Use -varuse to inhibit warning)

Finished checking --- 1 code warning

NOTE: not everything that 'splint' comments about is necessarily a bad thing;
for example, splint may complain if you don't save the value that ungetc()
returns (even if this may be a perfectly reasonable thing to ignore).

Test 4... Does the gradernotes file exist?
Yes.
Your gradernotes file contains:
1:"I wrote this code myself but I used example inout2.c from C
2:by Discovery by Foster. I also read the first couple of 
3:chapters of this book to learn the C language. As errors 
4:occured I often googled syntax and used websites like
5:stackoverflow.com and various other that lead me to 
6:fix my code."
7:
8:As of right now my code is finished, has no known bugs and 
9:does produce the correct output which has been verified
10:by the autograder. 

A human will have to read and evaluate the contents of gradernotes.
Double-check that you have BOTH required statements in gradernotes! 

Test 5: checking the soft links...
Is the getword.h soft link in place?
ls -l ~cssc0018/One/getword.h
lrwxrwxrwx 1 cssc0018 carroll 36 Sep  4 08:51 /home/cs/carroll/cssc0018/One/getword.h -> /home/cs/faculty/cs570/One/getword.h
Yes.
Is the makefile soft link in place?
ls -l ~cssc0018/One/makefile
lrwxrwxrwx 1 cssc0018 carroll 35 Sep  4 08:52 /home/cs/carroll/cssc0018/One/makefile -> /home/cs/faculty/cs570/One/makefile
Yes.
Is the p1.c soft link in place?
ls -l ~cssc0018/One/p1.c
lrwxrwxrwx 1 cssc0018 carroll 31 Sep  4 08:51 /home/cs/carroll/cssc0018/One/p1.c -> /home/cs/faculty/cs570/One/p1.c
Yes.
Unless ALL these are right, you could LOSE a point here; your total is now 1/1

Test 6... does your program compile?
make clean; make
rm -f *.o p1
gcc -g   -c -o getword.o getword.c
gcc -g   -c -o p1.o p1.c
gcc -o p1 getword.o p1.o
[1] 14247

Test 7... are all the program0 specs still met?
Here is the result of ~cssc0018/One/p1 < ~cs570/Data1/input1 :

Your output was:
n=10, s=[no-brainer]
n=3, s=[one]
n=0, s=[]
n=0, s=[]
n=8, s=[trickier]
n=0, s=[]
n=3, s=[t$o]
n=-6, s=[master]
n=0, s=[]
n=-10, s=[$Different]
n=-5, s=[Words]
n=0, s=[]
n=0, s=[]
n=0, s=[]
n=0, s=[]
n=-6, s=[expect]
n=49, s=[10,3,0,0,8,0,3,-6,0,-10,-5,0,0,0,0,-6,49,0,0,-255]
n=0, s=[]
n=0, s=[]
n=-255, s=[]

A diff of the correct output with your output shows:
                              No differences encountered -- CONGRATULATIONS

Three more points were possible here; your total is now 4/4

Test 8... does your program recognize metacharacters?
Here is the result of ~cssc0018/One/p1 < ~cs570/Data1/input2 :

Your output was:
n=5, s=[AB~CD]
n=18, s=[/usr/local/binABCD]
n=-5, s=[SHELL]
n=-1, s=[~]
n=0, s=[]
n=-255, s=[]

A diff of the correct output with your output shows:
                              No differences encountered -- CONGRATULATIONS
   (NOTE: Since I randomly set the HOME variable, you should not expect
   to see ~cssc0018 in the output.)
Three more points were possible here; your total is now 7/7

Test 9... how does your program react to backslash-metacharacters?
Here is the result of ~cssc0018/One/p1 < ~cs570/Data1/input3 :

Your output was:
n=13, s=[one\>stillone]
n=3, s=[\<<]
n=7, s=[\$abcd\]
n=0, s=[]
n=9, s=[<<\~foo\\]
n=0, s=[]
n=-255, s=[]

The correct output is:
n=12, s=[one>stillone]
n=1, s=[<]
n=1, s=[<]
n=5, s=[$abcd]
n=2, s=[<<]
n=5, s=[~foo\]
n=0, s=[]
n=-255, s=[]

A diff of the correct output with your output shows:
1,6c1,5
< n=12, s=[one>stillone]
< n=1, s=[<]
< n=1, s=[<]
< n=5, s=[$abcd]
< n=2, s=[<<]
< n=5, s=[~foo\]
---
> n=13, s=[one\>stillone]
> n=3, s=[\<<]
> n=7, s=[\$abcd\]
> n=0, s=[]
> n=9, s=[<<\~foo\\]

                                              ERROR    ERROR    ERROR    ERROR

Two more points were possible here; your total is now 7/9

Test 10... does your program handle buffer overruns correctly?
Here is the result of ~cssc0018/One/p1 < ~cs570/Data1/input4 :

Your output was:
n=6, s=[123$56]
n=-1, s=[~]
n=-255, s=[]

The correct output is:
n=6, s=[123$56]
n=25, s=[/home/cs/carroll/cssc0018]
n=-255, s=[]

                                              ERROR    ERROR    ERROR    ERROR

Three more points were possible here; your total is now 8/12

Test 11... does your program handle buffer overruns correctly?
Here is the result of ~cssc0018/One/p1 < ~cs570/Data1/input5 :

Your output was:
n=5, s=[word1]
n=254, 
s=[|123456789a123456789b123456789c123456789d123456789e123456789f123456789g123456
789h123456789i123456789j123456789k123456789l123456789m123456789n123456789o123456
789p123456789q123456789r123456789s123456789t123456789u123456789v123456789w123456
789x123456789y123]
n=254, 
s=[456789z123456789A123456789B123456789C123456789D123456789E123456789F123456789G
123456789H123456789I123456789J123456789K123456789L123456789M123456789N123456789O
123456789P123456789Q123456789R123456789S123456789T123456789U123456789V123456789W
123456789X1234567]
n=13, s=[89Y123456789Z]
n=0, s=[]
n=-255, s=[]

The correct output is:
n=5, s=[word1]
n=1, s=[|]
n=254, s=[123456789a123456789b123456789c123456789d123456789e123456789f123456789g123456789h123456789i123456789j123456789k123456789l123456789m123456789n123456789o123456789p123456789q123456789r123456789s123456789t123456789u123456789v123456789w123456789x123456789y1234]
n=254, s=[56789z123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789K123456789L123456789M123456789N123456789O123456789P123456789Q123456789R123456789S123456789T123456789U123456789V123456789W123456789X12345678]
n=12, s=[9Y123456789Z]
n=0, s=[]
n=-255, s=[]

A diff of the correct output with your output shows:
2,5c2,4
< n=1, s=[|]
< n=254, s=[123456789a123456789b123456789c123456789d123456789e123456789f123456789g123456789h123456789i123456789j123456789k123456789l123456789m123456789n123456789o123456789p123456789q123456789r123456789s123456789t123456789u123456789v123456789w123456789x123456789y1234]
< n=254, s=[56789z123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789K123456789L123456789M123456789N123456789O123456789P123456789Q123456789R123456789S123456789T123456789U123456789V123456789W123456789X12345678]
< n=12, s=[9Y123456789Z]
---
> n=254, s=[|123456789a123456789b123456789c123456789d123456789e123456789f123456789g123456789h123456789i123456789j123456789k123456789l123456789m123456789n123456789o123456789p123456789q123456789r123456789s123456789t123456789u123456789v123456789w123456789x123456789y123]
> n=254, s=[456789z123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789K123456789L123456789M123456789N123456789O123456789P123456789Q123456789R123456789S123456789T123456789U123456789V123456789W123456789X1234567]
> n=13, s=[89Y123456789Z]

                                              ERROR    ERROR    ERROR    ERROR

Three more points were possible here; your total is now 8/15

Your grade for this assignment may be adjusted by a (human) grader at the
due date.  Your grade could be as much as two points lower, depending on what
you have put in gradernotes, and the quality of your getword.c documentation.

             ------
Total Points | 8  |  for cssc0018 - Bernardo Cervantes,,,6196001753 for Program 1
             |----|
             | 15 |
             ------
